<scroll-view
	class="h-full p-20 leading-50"
	scroll-y
>
	<view>提示:请先安装依赖(npm i)并把编辑器ts版本设置为最新</view>
	<view>讨论群:加微信:missannil 请注明(annil)</view>
	<view class>使用见 https://github.com/missannil/annil </view>
	<view class="m-20 font-bold text-center text-50">简介</view>
	<view>annil(安奈儿)是github上开源的微信小程序原生插件。她会让你获得满意的开发体验,大大提高代码质量和开发效率。</view>

	<view class="m-20 font-bold text-center text-50">特点</view>
	<view class="m-20 font-bold text-center">1 组件构建API功能更强大</view>
	<view class>
		新的组件构建API加入了
		<text class="text-blue-700">store(基于mobx的全局响应式数据)、</text>
		<text class="text-blue-700">watch、</text>
		<text class="text-blue-700">computed</text>等功能,使开发更便捷。
	</view>
	<view class="m-20 font-bold text-center">2 复杂组件完美解耦方案</view>
	<view class>新的组件构建方案(根组件 + 子组件(可选)),组件逻辑与wxml标签一一对应。解决书写复杂组件时不同组件代码耦合的问题。</view>
	<view class="m-20 font-bold text-center">3. 组件类型概念</view>
	<view>新的组件构建API(DefineComponent)返回的类型叫组件类型,好比传统组件(UI)库为每个组件书写的使用文档,在做为子组件构建新组件(页面)时,子组件API(SubComponent)需要使用者传入组件类型,这样在书写配置字段时会得到完美的类型提示和错误检测。这样实现了在一个页面中所有子组件之间的类型耦合,无论组件嵌套多少层,无论哪层组件数据类型发生改变,所有相关组件类型都会得到感知。当您增改、重构代码时,只要无类型报错(tsc --noEmit --watch)就不会有运行时报错的心智负担。</view>
	<view class="m-20 font-bold text-center">4. 高兼容性</view>
	<view>annil提供的API都是原生API的语法糖,不具有强制性和侵入性,可渐进的重构代码。</view>
	<view class="m-20 font-bold text-center">5. 类型修补</view>
	<view>官方类型(miniprogram-api-typings)更新可能不够及时,annil提供了新的类型(补全官方类型)方便开发,这些类型都采用ES模块化,不会污染全局类型。</view>
	<view class="m-20 font-bold text-center">6. 完美适配第三方组件(UI)库</view>
	<view>第三方组件库一般都是以文档的形式对组件说明,annil提供了泛型[CreateComponentType](./src/types/CreateComponentType.ts),可根据组件文档快速书写组件类型,使第三方组件完美融入annil组件模型,也可以自己书写临时组件类型用于项目。内置的原生组件类型库(Wm)和第三方组件库(Vant)也会持续维护。</view>
	<view class="m-20 font-bold text-center">7. vscode插件 `annil`</view>
	<text user-select>当使用ts开发时,可安装vscode插件,会自动检测组件中`.wxml` 和 `.json`错误,并可一键修复,不必在书写wxml中自定义组件的属性和json文件的导入地址了。详情见 [插件市场] (https://marketplace.visualstudio.com/items?itemName=missannil.vscode-annil)</text>
</scroll-view>
